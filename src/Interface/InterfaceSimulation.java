/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;


import Class.BatimentEtage;
import Class.Capteur;
import Class.CapteurExterieur;
import Class.CapteurInterieur;
import Class.GPS;
import Class.InfoLog;
import Class.Intervalle;
import java.awt.List;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.sql.Array;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import javax.swing.ButtonModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Quentin
 */
public class InterfaceSimulation extends javax.swing.JFrame {

    /**
     * Creates new form InterfaceSimulation
     */
    boolean premiereConnexion;
    Set<String> listeBatiment =  new HashSet<String>();
    Map<String, Set<String>> listeEtage = new HashMap();
    Map<BatimentEtage , Set<String>>listeClasse =  new HashMap();
    private Capteur capteur  ;
        
    public InterfaceSimulation(boolean premiereConnexion) {
        this.premiereConnexion = premiereConnexion; // A faire permetttra de sauvarger le capteur simuler avec un logIn 
        
        DateFormat sdf = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss"); /* On recupere la date et l'heure actuel*/
        Date date = new Date();
             
        /* On  recupere les batiments*/
        try{
                    InputStream flux=new FileInputStream(".\\ressource\\Localisation.txt"); 
                    InputStreamReader lecture=new InputStreamReader(flux);
                    BufferedReader buff=new BufferedReader(lecture);
                    String ligne;
                    while ((ligne=buff.readLine())!=null){
                            
                            
                            String[] tab;
                             tab = ligne.split(" ");
                          
                             listeBatiment.add(tab[0]);
                             
                             if (!listeEtage.containsKey(tab[0]))
                                 listeEtage.put(tab[0], new HashSet<String>());
                                 
  
                               listeEtage.get(tab[0]).add(tab[1]);
                             
                             BatimentEtage batEta = new BatimentEtage(tab[0], tab[1]);
                             
                             
                          if ( !listeClasse.containsKey(batEta))
                          {
                                 
                                 listeClasse.put(batEta,new HashSet<String>());
                                 listeClasse.get(batEta).add(tab[2]);
                                
                          } 
                          else
                              listeClasse.get(batEta).add(tab[2]);
                                                            
                        
                       }
                    
                    buff.close(); 
                    
                    
                   
            }		
               catch (Exception e){
                  System.out.println(e.toString());
             
               }
      
       
         initComponents();
         
         jListeBatiment.setModel(new DefaultComboBoxModel(listeBatiment.toArray()));
         jlisteEtage.setModel(new DefaultComboBoxModel( listeEtage.get(jListeBatiment.getSelectedItem().toString()).toArray()));
         BatimentEtage batEtage = new BatimentEtage(jListeBatiment.getSelectedItem().toString(),jlisteEtage.getSelectedItem().toString());
         jListClasse.setModel(new DefaultComboBoxModel(listeClasse.get(batEtage).toArray()));
         dateHeure.setText(sdf.format(date));
         jPanel2.setVisible(false);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choixCapteur = new javax.swing.ButtonGroup();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        identifiant = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        type = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        unite = new javax.swing.JLabel();
        choixInt = new javax.swing.JRadioButton();
        choixExt = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        dateHeure = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        marge = new javax.swing.JFormattedTextField( NumberFormat.getNumberInstance() );
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        x = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        y = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jListeBatiment = new javax.swing.JComboBox<>();
        jlisteEtage = new javax.swing.JComboBox<>();
        jListClasse = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        commentairePosition = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        precision = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        intervalleMin = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        intervalleMax = new javax.swing.JTextField();
        Valider = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        valeur = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        frequence = new javax.swing.JTextField();
        labelValeur = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Veuillez entrer les informations sur le capteur");

        identifiant.setText("(Radiateur , lampe ,....)");
        identifiant.setToolTipText("");

        jLabel3.setText("Identifiant");
        jLabel3.setToolTipText("Entrez le nom du capteur");

        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Temperature", "Humidité", "Luminosité", "Volume Sonore", "Consomation Eclairage", "Eau Froide", "Eau Chaude", "Vitesse vent", "Pression atmosphérique" }));
        type.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeItemStateChanged(evt);
            }
        });
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });

        jLabel4.setText("Type");
        jLabel4.setToolTipText("Choisisez le Type de donnés ");

        jLabel10.setText("Unite");

        unite.setText("°C");

        choixCapteur.add(choixInt);
        choixInt.setText("Capteur interieur");
        choixInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choixIntActionPerformed(evt);
            }
        });

        choixCapteur.add(choixExt);
        choixExt.setText("Capteur exterieur");
        choixExt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choixExtActionPerformed(evt);
            }
        });

        jLabel8.setText("Date et  Heure");
        jLabel8.setToolTipText("");

        dateHeure.setText("jLabel1");

        jLabel9.setText("Marge");
        jLabel9.setToolTipText("Ecriver la marge de precision du capteur");

        marge.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        marge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                margeActionPerformed(evt);
            }
        });

        jLabel5.setText("Localisation :");

        jLabel1.setText("Entrer les coordonné Gps latitude ( -90 ; 90) et longitude (-180;180)");

        x.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat(""))));
        x.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xActionPerformed(evt);
            }
        });

        jLabel12.setText("X");

        jLabel13.setText("Y");

        jLabel14.setText("Batiment");

        jListeBatiment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jListeBatimentActionPerformed(evt);
            }
        });

        jlisteEtage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlisteEtageActionPerformed(evt);
            }
        });

        jLabel17.setText("Position relative");

        commentairePosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentairePositionActionPerformed(evt);
            }
        });

        jLabel11.setText("Precision");

        precision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precisionActionPerformed(evt);
            }
        });

        jLabel7.setText("Intervalle min");

        intervalleMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intervalleMinActionPerformed(evt);
            }
        });

        jLabel6.setText("Intervalle max");

        intervalleMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intervalleMaxActionPerformed(evt);
            }
        });

        Valider.setText("Valider");
        Valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValiderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(choixInt)
                        .addGap(18, 18, 18)
                        .addComponent(choixExt)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(696, 696, 696))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(identifiant, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(68, 68, 68))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(78, 78, 78)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(82, 82, 82)
                                    .addComponent(unite)
                                    .addGap(185, 185, 185)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(marge, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(81, 81, 81)
                                        .addComponent(dateHeure)))
                                .addGap(533, 533, 533))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(37, 37, 37)
                                                .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(48, 48, 48)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jListeBatiment, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel17))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(commentairePosition, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jlisteEtage, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jListClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel6))
                                        .addGap(40, 40, 40)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(intervalleMin, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                            .addComponent(precision, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(intervalleMax))))))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(271, 271, 271)
                .addComponent(Valider)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(identifiant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(unite))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(choixInt)
                    .addComponent(choixExt))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(dateHeure))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(marge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jListeBatiment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlisteEtage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jListClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(commentairePosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(precision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(intervalleMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(intervalleMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(Valider)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel15.setText("Valeur entre");

        valeur.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                valeurFocusLost(evt);
            }
        });
        valeur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valeurActionPerformed(evt);
            }
        });

        jButton1.setText("Valeur Aleatoire");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Frequence d'envoi");

        frequence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frequenceActionPerformed(evt);
            }
        });

        labelValeur.setText("jLabel18");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(labelValeur))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addComponent(jLabel16))))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(frequence, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valeur, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(valeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelValeur))
                .addGap(23, 23, 23)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(frequence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(125, Short.MAX_VALUE))
        );

        jMenu1.setText("Se Connecter");

        jMenuItem2.setText("jMenuItem2");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValiderActionPerformed
        // TODO add your handling code here:
        if (precision.getText().equals("") ||marge.getText().equals("") ||identifiant.getText().equals("") ||precision.getText().equals("") ||
                intervalleMin.getText().equals("") || intervalleMax.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Remplisez tous les champs !", "Error", JOptionPane.ERROR_MESSAGE);

        }
        else
        {
        Capteur capteur ;
        Intervalle i = new Intervalle (Float.parseFloat(intervalleMin.getText()),Float.parseFloat(intervalleMax.getText()));
        if ( choixExt.isSelected())
        {
             GPS gps =  new GPS(Integer.parseInt(x.getText()),Integer.parseInt(y.getText()));
             this.capteur =  new CapteurExterieur(gps,unite.getText(),identifiant.getText(),i,dateHeure.getText(),Float.parseFloat(precision.getText()),Float.parseFloat(marge.getText()), 60); // 60 correspond a  la frequence    
       
        }else
        {
             String str = jListeBatiment.getSelectedItem().toString()+jlisteEtage.getSelectedItem().toString()+jListClasse.getSelectedItem().toString();
             this.capteur = new CapteurInterieur(str,unite.getText(),identifiant.getText(),i,dateHeure.getText(),Float.parseFloat(precision.getText()),Float.parseFloat(marge.getText()), 60) ; 
        }
      
        jPanel1.setVisible(false);
        jPanel2.setVisible(true);
        labelValeur.setText(this.capteur.getI().toString());
        }
    }//GEN-LAST:event_ValiderActionPerformed

    private void choixIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choixIntActionPerformed
        // TODO add your handling code here:
        /* On les reactive tous */
        jListClasse.setEnabled(true);
        jListeBatiment.setEnabled(true);
        jlisteEtage.setEnabled(true);
        commentairePosition.setEnabled(true);
        x.setEnabled(true);
        y.setEnabled(true);
        
        if ( choixExt.isSelected()) // On desactive les choix de localitin pour le capteur Int
        {
            jListClasse.setEnabled(false);
            jListeBatiment.setEnabled(false);
            jlisteEtage.setEnabled(false);
            commentairePosition.setEnabled(false);
        }
        else
        {
            x.setEnabled(false);
            y.setEnabled(false);
        }
    }//GEN-LAST:event_choixIntActionPerformed

    private void typeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeItemStateChanged
        // TODO add your handling code here:
       String val = type.getSelectedItem().toString();
       
        jListClasse.setEnabled(true);
        jListeBatiment.setEnabled(true);
        jlisteEtage.setEnabled(true);
        commentairePosition.setEnabled(true);
        x.setEnabled(true);
        y.setEnabled(true);
        
        if ( choixExt.isSelected()) // On desactive les choix de localitin pour le capteur Int
        {
            jListClasse.setEnabled(false);
            jListeBatiment.setEnabled(false);
            jlisteEtage.setEnabled(false);
            commentairePosition.setEnabled(false);
        }
        else
        {
            x.setEnabled(false);
            y.setEnabled(false);
        }
           if (val.equals("Temperature"))
           {         
               unite.setText("Degres Celsius°C");
               choixCapteur.clearSelection();
               choixExt.setEnabled(true);
               choixInt.setEnabled(true);
           }    
           else if (val.equals("Humidité"))
           {
                unite.setText("%");
               choixCapteur.clearSelection();
               choixExt.setEnabled(true);
               choixInt.setEnabled(true);
           }             
           else if (val.equals("Luminosité"))
           {
               unite.setText("Lumen(lum)");
               choixCapteur.clearSelection();
               choixExt.setEnabled(true);
               choixInt.setEnabled(true);
           }
           else if (val.equals("Volume Sonore"))
           {
               unite.setText("Décibel db");
               choixCapteur.setSelected(choixInt.getModel(), true);
               choixExt.setEnabled(false);
               choixInt.setEnabled(true);
              
           }
           else if (val.equals("Consommation Eclairage"))
           {
               unite.setText("Watt W");
               choixCapteur.setSelected(choixInt.getModel(), true);
               choixExt.setEnabled(false);
               choixInt.setEnabled(true);
           }
           else if (val.equals("Eau Froide") || val.equals("Eau Chaude"))
           {
               unite.setText("Litre l");
               choixCapteur.setSelected(choixInt.getModel(), true);
               choixExt.setEnabled(false);
               choixInt.setEnabled(true);
           }
           else if (val.equals("Vitesse vent"))
           {
               unite.setText("kilomètre a l'heure km/h");
               choixCapteur.setSelected(choixExt.getModel(), true);
               choixInt.setEnabled(false);
               choixExt.setEnabled(true);
           }
            else if (val.equals("Pression atmosphérique"))
           {
               unite.setText("Hectopascal (hPa)");
               choixCapteur.setSelected(choixExt.getModel(), true);
               choixInt.setEnabled(false);
               choixExt.setEnabled(true);
              
           }  
               
        
           
       
       
        
    }//GEN-LAST:event_typeItemStateChanged

    private void choixExtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choixExtActionPerformed
        // TODO add your handling code here:
          jListClasse.setEnabled(true);
        jListeBatiment.setEnabled(true);
        jlisteEtage.setEnabled(true);
        commentairePosition.setEnabled(true);
        x.setEnabled(true);
        y.setEnabled(true);
        
        if ( choixExt.isSelected()) // On desactive les choix de localitin pour le capteur Int
        {
            jListClasse.setEnabled(false);
            jListeBatiment.setEnabled(false);
            jlisteEtage.setEnabled(false);
            commentairePosition.setEnabled(false);
        }
        else
        {
            x.setEnabled(false);
            y.setEnabled(false);
        }
    }//GEN-LAST:event_choixExtActionPerformed

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeActionPerformed

    private void margeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_margeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_margeActionPerformed

    private void xActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_xActionPerformed

    private void precisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precisionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precisionActionPerformed

    private void jListeBatimentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jListeBatimentActionPerformed
        // TODO add your handling code here:    
       // On ajoute a la combo boc les etage lié au batiment
        jlisteEtage.setModel(new DefaultComboBoxModel( listeEtage.get(jListeBatiment.getSelectedItem().toString()).toArray()));
    }//GEN-LAST:event_jListeBatimentActionPerformed

    private void intervalleMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intervalleMinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_intervalleMinActionPerformed

    private void commentairePositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentairePositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_commentairePositionActionPerformed

    private void jlisteEtageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlisteEtageActionPerformed
        // TODO add your handling code here:
        BatimentEtage batEtage = new BatimentEtage(jListeBatiment.getSelectedItem().toString(),jlisteEtage.getSelectedItem().toString());
         jListClasse.setModel(new DefaultComboBoxModel(listeClasse.get(batEtage).toArray()));
    }//GEN-LAST:event_jlisteEtageActionPerformed

    private void intervalleMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intervalleMaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_intervalleMaxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        System.out.println("identifiant"+this.capteur.getIdentifant());
        if( this.capteur != null)
        {
            valeur.setText(this.capteur.getI().GenerateValue()+"");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void frequenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frequenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frequenceActionPerformed

    private void valeurFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valeurFocusLost
        // TODO add your handling code here:
       if ( capteur != null)
       {
                if  (!capteur.getI().appartient(Float.parseFloat(valeur.getText())))
                {
                      JOptionPane.showMessageDialog(null, "La valeur doit etre compris entre"+capteur.getI().getBorneInf()+"et"
                              +capteur.getI().getBorneSup(), "Error", JOptionPane.ERROR_MESSAGE);
                      valeur.setText("");
                }
       }
    }//GEN-LAST:event_valeurFocusLost

    private void valeurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valeurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valeurActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Valider;
    private javax.swing.ButtonGroup choixCapteur;
    private javax.swing.JRadioButton choixExt;
    private javax.swing.JRadioButton choixInt;
    private javax.swing.JTextField commentairePosition;
    private javax.swing.JLabel dateHeure;
    private javax.swing.JTextField frequence;
    private javax.swing.JTextField identifiant;
    private javax.swing.JTextField intervalleMax;
    private javax.swing.JTextField intervalleMin;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> jListClasse;
    private javax.swing.JComboBox<String> jListeBatiment;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> jlisteEtage;
    private javax.swing.JLabel labelValeur;
    private javax.swing.JFormattedTextField marge;
    private javax.swing.JTextField precision;
    private javax.swing.JComboBox<String> type;
    private javax.swing.JLabel unite;
    private javax.swing.JTextField valeur;
    private javax.swing.JFormattedTextField x;
    private javax.swing.JTextField y;
    // End of variables declaration//GEN-END:variables
}
